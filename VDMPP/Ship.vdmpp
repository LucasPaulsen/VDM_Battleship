class Ship is subclass of GLOBAL

types
hitcoordinates = map Coordinates to bool;

instance variables
    public length: nat;
    public hitCoords: hitcoordinates;
    /* The coordinates shall invariantly be either horizontally or vertically aligned with no gaps inbetween */
    inv forall c1, c2 in set dom hitCoords & 
    (c1.X = c2.X and (c1.Y < c2.Y => {c1.Y, ..., c2.Y} subset Ycoords(dom hitCoords))) or
    (c1.Y = c2.Y and (c1.X < c2.X => {c1.X, ..., c2.X} subset Xcoords(dom hitCoords)))

operations
public Ship: Coordinates * Coordinates ==> Ship
Ship(cStart, cEnd) == 
    if cStart.X = cEnd.X then 
        (length := cEnd.Y - cStart.Y + 1;
        hitCoords := {mk_Coordinates(cStart.X, Y) |-> false | Y in set {cStart.Y,...,cEnd.Y}})
    else
        (length := cEnd.X - cStart.X + 1;
        hitCoords := {mk_Coordinates(X, cStart.Y) |-> false | X in set {cStart.X,...,cEnd.X}})
pre cStart.X = cEnd.X or cStart.Y = cEnd.Y;

public Hit: Coordinates ==> GuessResult
Hit(coord) == 
    (if exists c in set dom hitCoords &
    hitCoords(c) = false and c = coord
    then hitCoords(coord) := true;
    return mk_GuessResult(hitCoords(coord), rng hitCoords = {true}))
pre not rng hitCoords = {true};

end Ship